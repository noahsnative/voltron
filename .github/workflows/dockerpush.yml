name: Test and Build Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: voltron-injector

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Lint
        run: make install-tools & make lint

  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
      - name: Build test image
        run: docker build . --file deploy/injector/Dockerfile.unittest --tag unittest
      
      - name: Run unit test container
        run: docker run unittest


  push:
    needs: unit-test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file deploy/injector/Dockerfile --tag image

      # - name: Log into registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      # - name: Push image
      #   run: |
      #     IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
      #     # Strip git ref prefix from version
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #     # Strip "v" prefix from tag name
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      #     # Use Docker `latest` tag convention
      #     [ "$VERSION" == "master" ] && VERSION=latest
      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION
      #     docker tag image $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION
